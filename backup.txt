<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üîê Netrinix Cyber Lab</title>
    <link rel="stylesheet" href="style.css">
    <style>
        :root {
            --hacker-green: #00ff41;
            --matrix-green: #008f11;
            --dark-bg: #0a0a0a;
            --critical-red: #ff0033;
        }
        body {
            background-color: var(--dark-bg);
            color: var(--hacker-green);
            font-family: 'Courier New', monospace;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }
        /* Matrix Rain */
        #matrix {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0.2;
        }
        /* Header */
        header {
            padding: 20px;
            border-bottom: 1px solid var(--matrix-green);
            text-align: center;
        }
        h1 {
            text-shadow: 0 0 5px var(--hacker-green);
            animation: pulse 2s infinite;
        }
        /* Vulnerabilities */
        .vulnerability {
            background: rgba(0, 0, 0, 0.7);
            border: 1px solid var(--matrix-green);
            margin: 20px;
            padding: 15px;
            border-radius: 5px;
        }
        .vulnerability h2 {
            color: var(--critical-red);
        }
        /* Input Styling */
        input, button {
            font-family: 'Courier New', monospace;
        }
        input {
            background: #111;
            color: var(--hacker-green);
            border: 1px solid var(--matrix-green);
            padding: 10px;
            margin: 5px 0;
        }
        button {
            background: #008f11;
            color: white;
            border: none;
            padding: 10px 15px;
            cursor: pointer;
            margin: 5px 0;
        }
        button:hover {
            background: #00ff41;
        }
        /* Admin Panel */
        #adminPanel {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: var(--dark-bg);
            padding: 20px;
            border: 2px solid var(--critical-red);
            z-index: 100;
        }
        /* Animations */
        @keyframes pulse {
            0% { opacity: 0.7; }
            50% { opacity: 1; }
            100% { opacity: 0.7; }
        }
    </style>
</head>
<body>
 <!-- Beta Version Alert (Will show on page load) -->
    <div id="betaAlert" class="alert-modal">
        <div class="alert-content">
            <h3>‚ö†Ô∏è DEVELOPMENT NOTICE</h3>
            <p>This is a BETA version of the Netrinix Cybersecurity Training Lab. Some features may be unstable.</p>
            <button onclick="closeBetaAlert()">I Understand</button>
        </div>
    </div>

    <!-- Admin Panel (Hidden by default) -->
    <div id="adminPanel" class="admin-panel">
        <div class="admin-content">
            <h2>üîê ADMINISTRATOR PANEL</h2>
            <div id="adminLogin">
                <p>Authentication Required:</p>
                <input type="text" id="adminUser" placeholder="Username">
                <input type="password" id="adminPass" placeholder="Password">
                <button onclick="adminLogin()">Login</button>
                <p id="adminError"></p>
            </div>
            <div id="adminControls" style="display:none;">
                <p>Welcome, <span id="adminName"></span>!</p>
                <input type="password" id="newAdminPass" placeholder="New Password">
                <button onclick="changeAdminPass()">Change Password</button>
                <button onclick="adminLogout()">Logout</button>
            </div>
        </div>
    </div>

   
    <!-- Matrix Rain -->
    <canvas id="matrix"></canvas>

    <!-- Header -->
    <header>
        <h1>üíª NETRINIX CYBERSECURITY LAB</h1>
        <p>Find and exploit vulnerabilities in a safe environment</p>
    </header>

    <!-- Vulnerability 1: SQL Injection -->
    <div class="vulnerability">
        <h2>üîé 1. SQL Injection (User Search)</h2>
        <p>Extract all users from the database.</p>
        <input type="text" id="searchInput" placeholder="Enter username">
        <button onclick="searchUsers()">Search</button>
        <div id="searchResults"></div>
        <p><strong>üí° Hint:</strong> Try <code>' OR '1'='1</code></p>
    </div>

    <!-- Vulnerability 2: XSS -->
    <div class="vulnerability">
        <h2>üìù 2. XSS (Comment Section)</h2>
        <p>Inject a script that steals cookies.</p>
        <input type="text" id="commentInput" placeholder="Leave a comment">
        <button onclick="postComment()">Post</button>
        <div id="commentList"></div>
        <p><strong>üí° Hint:</strong> Try <code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></p>
    </div>

    <!-- Vulnerability 3: Admin Panel (CSRF) -->
    <div class="vulnerability">
        <h2>üëë 3. Admin Panel (CSRF)</h2>
        <p>Change the admin password without proper authentication.</p>
        <button onclick="openAdminPanel()">Access Admin Panel</button>
        <p><strong>üí° Hint:</strong> Craft a fake form that submits to the admin panel.</p>
    </div>

    <!-- Admin Panel (Hidden) -->
    <div id="adminPanel">
        <h2>üîê ADMIN PANEL</h2>
        <p>Change Administrator Password:</p>
        <form id="adminForm" onsubmit="changePassword(); return false;">
            <input type="password" id="newPassword" placeholder="New Password">
            <button type="submit">Update Password</button>
        </form>
        <button onclick="closeAdminPanel()">Close</button>
    </div>
  <!-- Vulnerability 4: IDOR -->
<div class="vulnerability">
    <h2>üÜî 4. IDOR (Profile Access)</h2>
    <p>Access other users' profiles by changing the ID.</p>
    <button onclick="window.location.href='/profile.html?id=1'">View Profile (ID=1)</button>
    <p><strong>üí° Hint:</strong> Try changing <code>?id=1</code> to <code>?id=2</code></p>
</div>

<!-- Vulnerability 5: Open Redirect -->
<div class="vulnerability">
    <h2>‚Ü™Ô∏è 5. Open Redirect</h2>
    <p>Trick users into visiting a malicious site.</p>
    <button onclick="window.location.href='/redirect.html?url=https://google.com'">Legit Link</button>
    <p><strong>üí° Hint:</strong> Change the URL parameter.</p>
</div>

    <!-- More vulnerabilities can be added here -->

    <script>
        // Matrix Rain Animation
        const canvas = document.getElementById('matrix');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        const chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        const drops = Array(Math.floor(canvas.width / 20)).fill(1);
        function drawMatrix() {
            ctx.fillStyle = "rgba(0, 0, 0, 0.05)";
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = "#0F0";
            drops.forEach((y, i) => {
                const text = chars[Math.floor(Math.random() * chars.length)];
                ctx.fillText(text, i * 20, y * 20);
                if (y * 20 > canvas.height || Math.random() > 0.975) drops[i] = 0;
                drops[i]++;
            });
        }
        setInterval(drawMatrix, 50);

        // Vulnerability 1: SQL Injection
        function searchUsers() {
            const input = document.getElementById('searchInput').value;
            const results = document.getElementById('searchResults');
            if (input.includes("' OR '1'='1")) {
                results.innerHTML = "<p>üíâ SQL Injection Successful!<br>Users: admin, user1, user2</p>";
            } else {
                results.innerHTML = "<p>No users found.</p>";
            }
        }

        // Vulnerability 2: XSS
        function postComment() {
            const comment = document.getElementById('commentInput').value;
            const commentList = document.getElementById('commentList');
            commentList.innerHTML += `<div>${comment}</div>`;
        }

        // Vulnerability 3: Admin Panel (CSRF)
        function openAdminPanel() {
            document.getElementById('adminPanel').style.display = 'block';
        }
        function closeAdminPanel() {
            document.getElementById('adminPanel').style.display = 'none';
        }
        function changePassword() {
            const newPass = document.getElementById('newPassword').value;
            alert(`Password changed to: ${newPass} (CSRF Successful!)`);
            closeAdminPanel();
        }
    </script>
   <script src="script.js"></script>
</body>
</html>
